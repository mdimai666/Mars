@page "/md/{**DocPath}"
@using MarsDocs.WebApp.Models
@inject NavigationManager _navigationManager
@inject HttpClient _httpClient
@implements IDisposable

<ContentWrapper>
    @if (menuItem is null)
    {
        <Block404 />
    }
    else
    {
        <PageTitle>@menuItem.Title</PageTitle>

        <article>
            <FluentMarkdownSection Content="@Content" />
        </article>

    }
</ContentWrapper>

@code {
    [Parameter]
    public string DocPath { get; set; } = default!;

    MenuItem? menuItem;
    string Content { get; set; } = "";

    FileNotFoundException? fileNotFound;
    bool isDevServer;

    protected override void OnInitialized()
    {
        App.OnReload += HandleReload;
        isDevServer = _navigationManager.BaseUri.Contains(":5253");
    }

    public void Dispose()
    {
        App.OnReload -= HandleReload;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Load();
    }

    async void Load()
    {
        try
        {
            menuItem = App.MenuDict.GetValueOrDefault(DocPath);

            if (isDevServer)
            {
                Content = await _httpClient.GetStringAsync(_navigationManager.BaseUri + "dev_docs/" + DocPath);
            }
            else
            {
                Content = App.ReadEmbedFile(DocPath);
            }
        }
        catch (FileNotFoundException ex)
        {
            fileNotFound = ex;
        }

        StateHasChanged();
    }

    private void HandleReload(string value)
    {
        Load();
    }
}
