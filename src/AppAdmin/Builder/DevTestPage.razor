@page "/builder/DevTestPage"
@using Mars.Plugin.Front
@using Mars.Shared.Tools
@using System.Reflection
@using Microsoft.FluentUI.AspNetCore.Components
@inject ModelInfoService modelService

<ContentWrapper Title="DevTestPage">

    <div class="card">
        <div class="card-body">

            <div class="d-flex flex-column gap-3">
                @if (pagesGroup is not null)
                {
                    foreach (var (assembly, pages) in pagesGroup)
                    {
                        <div>
                            <div>
                                <FluentLabel Typo="Typography.Subject" Class="fw-bold">
                                    @assembly.GetName().Name
                                </FluentLabel>
                            </div>

                            @foreach (var p in pages)
                            {
                                <div>
                                    <span>@p.Name</span> |
                                    @foreach (var url in p.Urls)
                                    {
                                        <a href=@($"/dev{url}")>@url</a>
                                    }
                                    @if (p.Roles?.Any()??false)
                                    {
                                        <text>
                                        | <span style="color:red;"> @p.Roles?.JoinStr(";") </span>
                                        </text>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>

</ContentWrapper>

@code {
    Dictionary<Assembly, List<GPageInfo>> pagesGroup = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.pagesGroup = modelService.GetPagesPageNonId(
            [
                typeof(Program).Assembly,
                .. WebAssemblyPluginFrontExtensions.PluginLoadAssemblies
            ]).GroupBy(x=>x.Assembly).ToDictionary(x=>x.Key, x=>x.ToList());
    }
}
