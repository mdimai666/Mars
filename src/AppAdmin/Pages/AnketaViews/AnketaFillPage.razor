@page "/Anketa/Fill/{GROUP:int}"

@inject AnketaQuestionService service
@inject MessageService _message

<ContentWrapper>
    @*<TabsBio />*@
    <DBackButton Class="position-absolute" />
    <h1 class="text-center mb-5">Анкета</h1>
    @*<div class="animate__animated animate__zoomInDown"></div>*@

    @if (GROUP < 1 || GROUP > 3)
    {
        <SharedContentNoRecords />
    }
    else if (IsBusy)
    {
        <SharedLoader1 />
    }
    else
    {

        @if (!isComplete)
        {
            <section class="bg-lime p-4 rounded-15 mb-5">
                Отвечайте на вопросы максимально честно, поскольку от этого будут зависеть индивидуальные рекомендации.
            </section>

            <section class="bg-lime p-4 rounded-15 mb-5">
                @{
                    int index = 0;
                }
                @foreach (var q in list!)
                {
                    index++;
                    <div class="mb-5">
                        <div class="">
                            <p class="fz18px text-black fw-bold">
                                @index.
                                @q.Title
                            </p>
                            <p>
                                @q.Content
                            </p>
                        </div>

                        @{
                            Guid? a = answers[q.Id];
                        }
                        <text>
                            <div class="d-flex1gap-5 mt-4">
                                @*<Button Class=@($"btn-a9128 {((a.HasValue && a.Value)?"active":"")}")
                    OnClick=@(e=>answers[q.Id] = true)>
                    Да
                    </Button>
                    <Button Class=@($"btn-a9128 {((a.HasValue && !a.Value)?"active":"")}")
                    OnClick=@(e=>answers[q.Id] = false)>
                    Нет
                    </Button>*@

                                @*@foreach (var v in q.AnswerVariants)
                    {
                    var vv = v;
                    string className = a.HasValue ? ((a.Value == v.Id) ? "active" : "") : "";
                    <Button Class=@($"btn-a9128 {className}")
                    OnClick=@(e=>answers[q.Id] = vv.Id)>
                    @v.Title
                    </Button>
                    }*@

                                <RadioGroup @bind-Value="@answers[q.Id]" TValue="Guid?">
                                    @foreach (var v in q.AnswerVariants)
                                    {
                                        <Radio Class="d-block" TValue="Guid?" Value="@(v.Id)">@v.Title</Radio>
                                    }
                                </RadioGroup>
                            </div>
                        </text>
                    </div>
                }

                <div class="spacer-1"></div>

                <div class="mt-5 text-end">
                    <Button Class="btn-pass" Loading=isSendLoading Disabled=!SubmitEnable OnClick="OnSubmit">Отправить</Button>
                </div>
            </section>
        }
        else
        {
            <section class="bg-lime p-4 rounded-15 mb-5">
            Обратите внимание, все дальнейшие указания имеют рекомендательный характер, поэтому их нельзя использовать для самодиагностики и самолечения. Для постановки диагноза и назначения лечения следует обращаться к врачу. Проконсультируйтесь с лечащим врачом прежде, чем вносить изменения в ваш график приема лекарств.
        </section>

        <section class="bg-lime p-4 rounded-15 mb-5">
            <div class="text-center">
                <img src="/img/art825.png" alt="" />
                <div class="spacer-4"></div>
            </div>
            <h5 class="text-center">Советуем обратиться за консультацией к врачу для получения качественной консультации.</h5>
        </section>

            <section>
                @*<div class="text-center">
                    <div class="spacer-5"></div>
                    <img src="/img/img-complete-anketa1.svg" />
                    <div class="spacer-5"></div>

                    <p class="text-accent h5 fw-normal">Ваш ответ был отправлен. Благодарим за обратную связь</p>
                </div>*@

                <div class="text-center p-4">
                    Ваш ответ был отправлен. Ждите результатов
                </div>

                <div class="text-center mt-5">
                    <a href="/">
                        <Button Class="btn-pass">Главная</Button>
                    </a>
                </div>
            </section>
        }
    }

    


</ContentWrapper>


@code {

    [Parameter] public int GROUP { get; set; }

    bool isComplete = false;

    bool IsBusy = true;
    bool isSendLoading = false;

    List<AnketaQuestion>? list = null;

    Dictionary<Guid, Guid?> answers = new();

    bool SubmitEnable => answers.Values.All(s => s.HasValue);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Load();
    }

    async void Load()
    {
        try
        {
            var query = new QueryFilter();
            query.AddQuery<AnketaQuestion>(s => s.Group == GROUP);
            var res = await service.ListTable(query);
            list = res.Records.ToList();
            list.ForEach(s => answers.Add(s.Id, null));
        }
        catch (Exception)
        {

        }
        finally
        {
            IsBusy = false;
        }
        StateHasChanged();

    }

    async void OnSubmit()
    {
        Console.WriteLine("1");

        isSendLoading = true;
        StateHasChanged();

        //AnketaDump dump = new AnketaDump
        //    {
        //        Answers = list.Select(s => new AnketaDumpAnswer
        //        {
        //            AnketaQuestionId = s.Id,
        //            TheAnswerIsYes = answers[s.Id] == true
        //        }).ToList()
        //    };

        var answer = new AnketaAnswer
            {

                Answers = list!.Select(s => new AnketaAnswer.AnketaAnswerRow
                {
                    AnketaQuestionId = s.Id,
                    AnswerId = answers[s.Id] ?? Guid.Empty,
                    AnswerText = s.AnswerVariants.FirstOrDefault(x => x.Id == answers[s.Id])!.Title
                }).ToList(),
            };



        var res = await service.SendAnswer1(answer);

        if (res.Ok)
        {
            isComplete = true;
        }
        else
        {
            _ = _message.Error(res.Message);
        }
        isSendLoading = false;
        StateHasChanged();
    }
}

<style>
    .btn-a9128 {
        background-color: #87C0F5 !important;
        box-shadow: none !important;
        color: white;
        width: 123px;
    }

        .btn-a9128:active, .btn-a9128:hover, .btn-a9128:focus, .btn-a9128.active {
            background-color: var(--bs-primary) !important;
            color: white;
        }

        .btn-a9128:active {
            transform: translate(3px,3px);
        }
</style>
