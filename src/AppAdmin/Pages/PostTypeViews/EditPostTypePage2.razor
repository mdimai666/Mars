@page "/EditPostType"
@page "/EditPostType/{ID:guid}"

@using Mars.Shared.Contracts.PostTypes
@using Blazored.TextEditor
@using Microsoft.AspNetCore.Authorization
@using Microsoft.FluentUI.AspNetCore.Components

@attribute [Authorize(Roles = "Admin")]
@inject IStringLocalizer<AppRes> L


<ContentWrapper>
    <StandartEditContainer ID=@ID
                           TModel=PostTypeEditModel
                           GetAction="@(()=>PostTypeEditModel.GetAction(client,ID))"
                           SaveAction="@((s,create)=>PostTypeEditModel.SaveAction(client,s,create))"
                           DeleteAction="@(s=>PostTypeEditModel.DeleteAction(client,s))"
                           AfterDelete=AfterDelete
                           AfterSave="AfterSave"
                           @ref=f CanCreate=false>
        <ChildContent>
            <FluentStack Orientation="Orientation.Vertical" Class="vstack gap-3">
            </FluentStack>

            <div class="vstack gap-3">

                <div class="vstack">
                    <FluentTextField @bind-Value=@context.Title Label="@AppRes.Title"
                                     Appearance="@FluentInputAppearance.Filled"
                                     Required
                                     Style="zoom:1.4" />
                    <FluentValidationMessage For="@(() => context.Title)" />
                </div>
                <div class="">
                    <FluentTextField @bind-Value=@context.TypeName Label="TypeName" />
                    <FluentValidationMessage For="@(() => context.TypeName)" />
                </div>

            </div>

            <div class="spacer-2"></div>

            <div class="vstack gap-4">

                <div class="card">
                    <div class="card-header">
                        Возможности
                    </div>
                    <div class="card-body">
                        <div class="d-flex flex-wrap">

                            @foreach (var d in PostTypeConstants.Features.All)
                            {
                                <div class="col-lg-4">
                                    <FluentCheckbox Value=@context.EnabledFeatures.Contains(d)
                                                    ValueChanged=@(v=>{
                                                if(v)context.EnabledFeatures.Add(d);
                                                else context.EnabledFeatures.Remove(d);
                                                })>
                                        @d
                                    </FluentCheckbox>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                @*
                <div class="card">
                    <div class="card-header">
                        Forms
                    </div>
                    <div class="card-body">

                        <FormItem2 For="()=>context.FormList.SourceUriSetter">
                            <FluentTextField Label="@nameof(PostType.FormList)"
                                             @bind-Value=@context.FormList.SourceUriSetter />
                        </FormItem2>
                        <div class="spacer-1"></div>
                        <FormItem2 For="()=>context.FormEdit.SourceUriSetter">
                            <FluentTextField Label="@nameof(PostType.FormEdit)"
                                             @bind-Value=@context.FormEdit.SourceUriSetter />
                        </FormItem2>
                    </div>
                </div>
                *@

                @if (context.FeatureActivated(PostTypeConstants.Features.Content))
                {
                    <div class="card">
                        <div class="card-header">
                            @nameof(context.PostContentSettings)
                        </div>
                        <div class="statuses card-body">

                            <div class="row row-cols-sm-3 py-2">
                                <div class="col">
                                    <FormItem2 For="@(()=>context.PostContentSettings.PostContentType)">
                                        <FluentSelect TOption="string"
                                                      Items="@PostTypeConstants.DefaultPostContentTypes.All"
                                                      @bind-Value="@context.PostContentSettings.PostContentType" />
                                    </FormItem2>
                                </div>
                                <div class="col">
                                    @if (context.PostContentSettings.PostContentType == PostTypeConstants.DefaultPostContentTypes.Code)
                                    {
                                        <FormItem2 For="@(()=>context.PostContentSettings.CodeLang)">
                                            <FluentTextField @bind-Value="@context.PostContentSettings.CodeLang" />
                                        </FormItem2>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @if (context.FeatureActivated(PostTypeConstants.Features.Status))
                {
                    <div class="">
                        <div class="spacer-2"></div>

                        <div class="statuses">
                            <div class="">
                                Статусы
                            </div>
                            <div class="card">
                                <div class="card-body small">
                                    <div class="st-item row mb-3 ">
                                        <div class="col-lg-4">@AppRes.Name</div>
                                        <div class="col-lg-4">@AppRes.Slug</div>
                                        <div class="col-lg-4 d-flex gap-2">
                                            <FluentButton OnClick=@(e=>context.PostStatusList.Add(new ()))>
                                                Добавить
                                            </FluentButton>
                                            <FluentMenuButton ButtonAppearance="Appearance.Neutral" Text="@AppRes.Actions">
                                                <FluentMenuItem OnClick=@(e=>context.PostStatusList.AddRange(PostStatusEditModel.DefaultStatuses()))>
                                                    Добавить стандартные
                                                </FluentMenuItem>
                                            </FluentMenuButton>
                                        </div>
                                    </div>

                                    @foreach (var _st in context.PostStatusList)
                                    {
                                        var st = _st;
                                        <div class="st-item row mb-3">
                                            <div class="col-lg-4">
                                                <FluentTextField @bind-Value=@st.Title />
                                            </div>
                                            <div class="col-lg-4">
                                                <FluentTextField @bind-Value=@st.Slug />
                                            </div>
                                            <div class="col-lg-4">
                                                <DFluentDeleteButton OnConfirm=@(e=>context.PostStatusList.Remove(st)) />
                                            </div>
                                        </div>
                                    }
                                    @if (context.PostStatusList.Count == 0)
                                    {
                                        <div class="text-secondary">
                                            <SharedContentNoRecords />
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                }


                @*
                @if (context.FeatureActivated(PostTypeConstants.Features.CategoryId))
                {
                    <div class="d-category">
                        <div class="">
                            Категория
                        </div>

                        <DSelectGuidServ @bind-Value=@context.CategoryId
                                         LabelExpression=@(s=>s.Title)
                                         TService=PostCategoryService TModel=PostCategory />

                    </div>
                }
                *@

                <div class="card">
                    <div class="card-header">
                        Meta fields
                    </div>
                    <div class="card-body">
                        <div class="card-section">

                            @if (!context.MetaFields.Any())
                            {
                                <SharedContentNoRecords />
                            }

                            <CascadingValue Value="@context.MetaFields">
                                <CascadingValue Value="@context.MetaRelationModels">
                                    <AppFront.Shared.Components.MetaFieldViews.FormMetaField />
                                </CascadingValue>
                            </CascadingValue>

                            <div class="mt-2">
                                <FluentButton IconStart="@(new Icons.Regular.Size16.Add())" OnClick="AddNewField">Добавить</FluentButton>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="d-block" style="height:50vh"></div>

        </ChildContent>
        <SectionExtraSidebar>
            <div class="card mb-3">
                <div class="card-body">
                    <FluentSwitch @bind-Checked="context.Disabled" Label="@AppRes.Disable" />
                    <div class="spacer-1"></div>
                    <FormItem2 For="@(()=>context.Tags)">
                        <InputTags2 @bind-Value=context.Tags />
                    </FormItem2>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <a href=@url target="_blank">
                        <FluentButton Appearance="Appearance.Neutral">Export</FluentButton>
                    </a>
                    <FluentButton Appearance="Appearance.Neutral" OnClick="ShowImportModal">Import</FluentButton>
                </div>
            </div>
        </SectionExtraSidebar>
    </StandartEditContainer>

</ContentWrapper>

<FluentDialog Hidden="@(!visibleImportModal)"
              aria-label="Import dialog"
              Modal=true
              @ondialogdismiss=@(()=>visibleImportModal=false)
              PreventScroll=true>
    <FluentDialogHeader Visible="false" />
    <h2>Import</h2>
    <div>
        @* <FluentInputFile OnInputFileChange="LoadFiles" /> *@
        <div class="my-2">
            <InputFile OnChange="LoadFiles" />
        </div>
        <FluentTextArea Class="w-100" Rows="20" @bind-Value=import_json />
        <div class="spacer-2"></div>
        <FluentButton Appearance="Appearance.Accent" Disabled=importButtonDisabled OnClick=OnImportClick>
            <i class="bi bi-upload me-2"></i>
            Импорт
        </FluentButton>
    </div>
</FluentDialog>
