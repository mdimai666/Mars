@page "/Settings/HostCache"
@using Mars.Shared.Interfaces
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@attribute [Display(Name = "Кеширование")]

<SettingsPageWrapper>

    <h3>Кеширование</h3>

    <div class="card">
        <div class="card-body text-break">

            @if (info is null)
            {
                <SharedLoader1 />
            }
            else
            {

                <table class="table table-hover">
                    <thead>
                        <tr>
                            <td>Имя</td>
                            <td>Информация</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var d in info)
                        {
                            <tr>
                                <td style="min-width:200px">@d.Key</td>
                                <td>@d.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="text-end">
                    <button class="btn btn-light" @onclick=@(()=>actApp.Inject("Mars.XActions.ClearCacheAct", []))>Очистить кеш</button>
                </div>
            }
        </div>
    </div>


</SettingsPageWrapper>

@code {
    IReadOnlyCollection<KeyValuePair<string, string>>? info;
    [Inject] IMarsWebApiClient client { get; set; } = default!;
    [Inject] IActAppService actApp { get; set; } = default!;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        Task.Run(async () =>
        {
            info = await client.System.HostCacheSettings();
            StateHasChanged();
        });
    }
}
