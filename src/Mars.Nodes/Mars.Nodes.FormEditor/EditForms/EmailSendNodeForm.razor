@using AppFront.Shared.Components
@using Microsoft.FluentUI.AspNetCore.Components
@using Mars.Nodes.FormEditor.EditForms.Components
@inherits NodeEditForm
@attribute [NodeEditFormForNode(typeof(EmailSendNode))]

<div class="form-group compact" style="--fluent-input-label-basis:150px">
    <div class="vstack gap-2">

        <FormItem2 For="()=>Node.Config">
            <InputConfigField @bind-Value=@Node.Config TConfig="SmtpConfigNode" />
        </FormItem2>

        <FormItem2 For="()=>Node.ToEmail">
            <FluentTextField @bind-Value=@Node.ToEmail TextFieldType=TextFieldType.Email Class="flex-fill" />
        </FormItem2>
         <FormItem2 For="()=>Node.Subject">
            <FluentTextField @bind-Value=@Node.Subject Class="flex-fill" />
        </FormItem2>
        <FormItem2 For="()=>Node.Message">
            <FluentTextArea @bind-Value=@Node.Message Rows=5 Class="flex-fill" Placeholder="input.Payload.Message" />
        </FormItem2>
    </div>
</div>

@code {
    [CascadingParameter] Node? Value { get; set; }
    EmailSendNode Node { get => (EmailSendNode)Value!; set => Value = value; }

}

