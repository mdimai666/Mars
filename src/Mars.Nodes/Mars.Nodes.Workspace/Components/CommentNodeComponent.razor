@using Mars.Core.Extensions
<g class="red-ui-flow-node red-ui-flow-node-group @(node.selected?"red-ui-flow-node-selected":"") @(node.Disabled?"red-ui-flow-node-disabled":"")"
   transform="translate(@X.ToString(CultureInfo.InvariantCulture),@Y.ToString(CultureInfo.InvariantCulture))" 
   node-id="@node.Id"
   @onclick:stopPropagation=true
   @ondblclick:stopPropagation=true
   >
    @*transform="translate(@X.ToString(CultureInfo.InvariantCulture),@Y.ToString(CultureInfo.InvariantCulture))">*@
    <!-- body -->
    <g>
        <filter id="dropshadow" height="140%">
            <feGaussianBlur in="SourceAlpha" stdDeviation="3" /> <!-- stdDeviation is how much to blur -->
            <feOffset dx="2" dy="2" result="offsetblur" /> <!-- how much to offset -->
            <feComponentTransfer>
                <feFuncA type="linear" slope="0.2" /> <!-- slope is the opacity of the shadow -->
            </feComponentTransfer>
            <feMerge>
                <feMergeNode /> <!-- this contains the offset blurred image -->
                <feMergeNode in="SourceGraphic" /> <!-- this contains the element that the filter is applied to -->
            </feMerge>
        </filter>

        <filter id="dropshadow-select" height="140%">
            <feGaussianBlur in="SourceAlpha" stdDeviation="3" /> <!-- stdDeviation is how much to blur -->
            <feOffset dx="-1" dy="2" result="offsetblur" /> <!-- how much to offset -->
            <feComponentTransfer>
                <feFuncA type="linear" slope="0.9" /> <!-- slope is the opacity of the shadow -->
            </feComponentTransfer>
            <feMerge>
                <feMergeNode /> <!-- this contains the offset blurred image -->
                <feMergeNode in="SourceGraphic" /> <!-- this contains the element that the filter is applied to -->
            </feMerge>
        </filter>

        <filter id="dropshadow-select-backdrop" height="140%">
            <feGaussianBlur in="SourceGraphic" stdDeviation="3" />
        </filter>

        <rect class="red-ui-flow-node--select-backdrop"
              y="-3"
              x="-4"
              width="@(bodyRectWidth+9f)"
              rx="12px"
              ry="12px"
              fill="#64b1d9"
              filter="url(#dropshadow-select-backdrop)"
              fill-opacity="0.5"
              height="@(bodyRectHeight+11)"></rect>

        <rect class="red-ui-flow-node-backdrop"
              y="4"
              x="1"
              fill="@node.Color"
              width="@(bodyRectWidth-1f)"
              height="@bodyRectHeight"></rect>

        <rect class="red-ui-flow-node"
              @onmousedown=OnMouseDownMethod
              @onmousedown:stopPropagation=true
              @onmouseup=OnMouseUpMethod
              @onmouseup:stopPropagation=true

              @onclick=OnClickEvent
              @onclick:stopPropagation=true
              @ondblclick=OnDblClickEvent
              @ondblclick:stopPropagation=true

              fill="@node.Color"
              style="filter:url(#fePointLight1)"
              width="@bodyRectWidth"
              height="@bodyRectHeight"></rect>

    </g>
    

    <!-- left icon -->
    <g class="red-ui-flow-node-icon-group"
       x="0"
       y="0"
       transform=""
       style="pointer-events: none">
        <rect x="0"
              y="0"
              class="red-ui-flow-node-icon-shade"
              width="30"
              height="@bodyRectHeight"></rect>
        <image href="@IconUrl"
               class="red-ui-flow-node-icon"
               x="5"
               width="26"
               height="26"
               style=""
               y="@(((bodyRectHeight - 30) / 2)+2)">
        </image>

        <path d="M 30 1 l 0 @(bodyRectHeight - 2)"
              class="red-ui-flow-node-icon-shade-border"></path>
    </g>
    <!-- right icon -->
    <!-- <g class="red-ui-flow-node-icon-group red-ui-flow-node-icon-group-right" x="0" y="0"
                    transform="translate(110,0)" style="pointer-events: none;">
                    <rect x="0" y="0" class="red-ui-flow-node-icon-shade" width="30" height="30"></rect>
                    <image xlink:href="/img/function.svg" class="red-ui-flow-node-icon" x="0" width="30" height="30"
                        y="0" style=""></image>
                    <path d="M 0 1 l 0 28" class="red-ui-flow-node-icon-shade-border"></path>
                </g> -->
    <!--  -->
    <g class="red-ui-flow-node-label 1node_label_italic"
       transform="translate(38,6)">
        @* <text class="red-ui-flow-node-label-text"
              x="0"
              y="@(((bodyRectHeight - 30) / 2))">
            @node.Text.TextEllipsis(MaxTextLength)
        </text> *@
        <foreignObject width="@(bodyRectWidth - 45)" height="@(bodyRectHeight - 10)">
            <p class="red-ui-flow-node-label-text" xmlns="http://www.w3.org/1999/xhtml">@node.Text.TextEllipsis(MaxTextLength)</p>
        </foreignObject>
    </g>
    @if (node.changed)
    {
        <g class="red-ui-flow-node-changed 1hide"
       transform="translate(@(bodyRectWidth - 10f), -2)">
            <circle r="5"></circle>
        </g>
    }
</g>
