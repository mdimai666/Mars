@using MarsEditors
@inherits NodeEditForm
@attribute [NodeEditFormForNode(typeof(EmailSendNode))]


<div class="form-group d-flex flex-column">
    <label>ToEmail</label>
    <InputText class="form-control " @bind-Value=Node.ToEmail placeholder="input.Payload.ToEmail" />
</div>
<div class="form-group d-flex flex-column">
    <label>Subject</label>
    <InputText class="form-control " @bind-Value=Node.Subject placeholder="input.Payload.Subject" />
</div>
<div class="form-group d-flex flex-column">
    <label>Message</label>
    @* <MarsCodeEditor @ref=editor1
                     Lang="@MarsCodeEditor.Language.handlebars"
                     OnSave="OnEditorSave"
                     Value="@Node.Message" /> *@

    <InputTextArea class="form-control 1flex-fill textarea-code f-on-tabpress-write-tab" @bind-Value=Node.Message placeholder="input.Payload.Message" />
</div>


@code {
    [CascadingParameter] Node? Value { get; set; }
    EmailSendNode Node { get => (EmailSendNode)Value!; set => Value = value; }

    // MarsCodeEditor? editor1;


    // public override async Task OnEditSave()
    // {
    //     //Console.WriteLine("X>1111");
    //     Node.Message = await editor1.GetValue();
    //     //Console.WriteLine("X>2222");
    //     //await Task.Delay(100);
    // }


    // void OnEditorSave(string val)
    // {
    //     //_ = form.OnFinish();
    // }
}

