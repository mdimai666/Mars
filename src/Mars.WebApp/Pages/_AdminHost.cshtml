@page ""
@namespace Mars.Pages
@using AppFront.Shared
@using Mars.Controllers
@using Mars.Core.Features
@using Mars.Host.Handlers
@using Mars.Host.Shared.Constants.Website
@using Mars.Host.Shared.Interfaces
@using Mars.Host.Shared.Models
@using Mars.Host.Shared.Services
@using Mars.Host.Shared.WebSite.Scripts
@using Mars.Host.WebSite.Scripts
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}
@inject IOptionService optionService
@inject IServiceProvider serviceProvider;
@inject IRequestContext requestContext;
@inject InitialSiteDataViewModelHandler _initialSiteDataHandler;

@{
    //TODO: Uncomment
    // AppAdmin.Program.IsPrerender = false;
    Q.IsPrerender = false;
    MarsAppFront af = new MarsAppFront
    {
        Configuration = new Mars.Core.Models.AppFrontSettingsCfg
        {
            Mode = Mars.Core.Models.AppFrontMode.ServeStaticBlazor,
            Url = "/dev",
            Path = "dev"
        }
    };
    HttpContext.Items.Add(nameof(MarsAppFront), af);

    var scriptsBuilder = serviceProvider.GetRequiredKeyedService<ISiteScriptsBuilder>(AppAdminConstants.SiteScriptsBuilderKey);

    var vm = await _initialSiteDataHandler.Handle(Request, devAdminPageData: true, CancellationToken.None);

    Q.UpdateInitialSiteData(vm);

    var json = System.Text.Json.JsonSerializer.Serialize(vm);

    string bodyClass = "";
    bool loggedIn = User.Identity.IsAuthenticated;
    bodyClass += "logged-in ";

    try
    {

        if (User.Identity.IsAuthenticated && requestContext.Roles is not null)
        {
            var isAdmin = requestContext.Roles.Contains("Admin");

            bodyClass += $"{(isAdmin ? "admin" : "")} ";
        }
    }
    catch (Exception)
    {

        throw;
    }

    bool isDarkTheme = false;
    if (Request.Cookies.ContainsKey("dark"))
    {
        isDarkTheme = bool.Parse(Request.Cookies["dark"] ?? "false");
    }

}
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@optionService.SysOption.SiteName</title>
    <base href="/dev/" />

    @{
        // all scripts moved to:
        _ = nameof(AppAdminSpaHtmlScripts);
    }
    @Html.Raw(scriptsBuilder.HeadScriptsRender())

</head>
<body class="@($"{bodyClass} {(isDarkTheme ? "dark" : "")}")" prerender>

    <script>
        //window._dev = true;
        function InitialSiteDataViewModel() {
            let vm = "@Html.Raw(TextZip.ZipToBase64(json))";
            return vm;
        }
    </script>
    <app id="app">
        @* <component type="typeof(AppAdmin.App)" render-mode="Static" /> *@
        <div class="flex-fill xcenter">
            <component type="typeof(AppFront.Shared.Components.SharedLoader1)" render-mode="Static" />
        </div>

    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–≤–µ—á–∞—Ç—å –¥–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏.
        </environment>
        <environment include="Development">
            –ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è —Å–º. –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞.
        </environment>
        <a href="" class="reload">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</a>
        <a class="dismiss">üóô</a>
    </div>

    @Html.Raw(scriptsBuilder.FooterScriptsRender())

</body>
</html>
